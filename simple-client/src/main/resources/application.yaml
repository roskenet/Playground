server:
  port: 8081

security:
  oauth2:
    client:
      client-id: simple-client
      client-secret: "c0dba145-1cce-4775-be90-5909094bb361"
      access-token-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/token
    resource:
      user-info-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/userinfo
      token-info-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/token/introspect
      
#spring:  
#  security:
#    oauth2:
#      client:
#        registration:
#          demo:
#            clientId: simple-client
#            clientSecret: "c0dba145-1cce-4775-be90-5909094bb361"
#            authorization-grant-type: client_credentials
#        provider:
#          keycloak:
#            tokenUri: http://localhost:8080/realms/demo/protocol/openid-connect/token
#            tokenInfoUri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/token/introspect
      
      
#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          # This 'Demo:' is the id used inside the redirect-uri-template and must be the same as your realm
#          Demo: 
#            client-id: helloworld
#            client-secret: a0fe1b28-02f1-4751-a4eb-a72f78882a47
#            client-name: helloworld
#            provider: keycloak
#            scope: openid, profile, user
#            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#        provider:
#          keycloak:
#            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
#            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
#            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
#            user-name-attribute: preferred_username